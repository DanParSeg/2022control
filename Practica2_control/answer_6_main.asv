% Using the pole placement method, design a state feedback controller to control
%the landing of the aircraft. We want to steer the aircraft from the state
%x = (x, y, θ, ˙x, ˙y,˙θ)
%T = (1, 5, 0.0174533, −0.1, −0.2, 0.00174533)T
%to the state x = (0, 2.4, 0, 0, 0, 0)T . 
%Give the eigenvalues that have been assigned to
%the controlled system and illustrate the behaviour of the controller by plotting
%the relevant state and control variables and by a graphical animation.


%init;
x=[1;5;0.0174533;-0.1;-0.2;0.00174533]; % Initial state

%define constants
m=30000;
d=5.5;
g=9.81;
J=10000;
u1_A=m*g;

A=[0 0 0 1 0 0;
   0 0 0 0 1 0;
   0 0 0 0 0 1;
   0 0 -u1_A/m 0 0 0;
   0 0 0 0 0 0;
   0 0 0 0 0 0];

B=[0 0;0 0;0 0;0 0;1/m 0; 0 2*d/J];

pcontrol=0:size(A,1)-1;
separation=0.1;
offset=2;
pcontrol=(pcontrol*-separation)-offset;
E=[1 0 0 0 0 0;
   0 1 0 0 0 0];

K=place(A,B,pcontrol);

H=-inv(E*inv(A-B*K)*B);


dt=0.01;
frame_counter=0;
for t=0:dt:2
    x_des=[0;0;0;0;0;0]
    u=u_bar-K*(x-x_des)
    
    x=x+answer_6_f(x,u)*dt; % Euler x
    %x=x+dt*(0.25*e_5p7_f(x,u)+0.75*(e_5p7_f(x+dt*(2/3)*e_5p7_f(x,u),u))); % Runge-Kutta
    
    pause(dt);
    
    
    % Frame sampling
    if frame_counter == 0
       %e_6p4_draw(t,x,u);
       answer_6_draw_dibujo(x);
    end

    frame_counter =frame_counter+1;
    t
    x
    if frame_counter == 1
        frame_counter=0;
    end
end;


